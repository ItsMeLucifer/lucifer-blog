{"version":3,"sources":["utils/api.js","components/common/field.js","store/actions/authActions.js","components/Pages/Login.js","components/common/header.js","components/assets/img/about.jpg","components/common/BlogItem.js","store/actions/siteActions.js","components/Pages/Blog.js","components/common/commentbuilder.js","components/assets/img/user.png","components/Pages/Single.js","components/Pages/Signup.js","store/actions/adminActions.js","components/Pages/Admin/Dashboard.js","components/common/TableView.jsx","components/Pages/Admin/Users.js","components/Pages/Admin/Posts.js","components/Pages/Admin/AddPost.jsx","components/Pages/Admin/AddUser.jsx","components/common/Sidebar.js","components/AdminWrapper.js","components/LoginWrapper.js","App.js","reportWebVitals.js","store/reducers/authReducer.js","store/reducers/adminReducer.js","store/reducers/siteReducer.js","store/reducers/index.js","store/configureStore.js","index.js"],"names":["host","Field","className","this","props","elementName","id","name","type","placeholder","placeHolder","required","data-validation-required-message","onChange","onBlur","handleBlur","errors","Component","API","makeFileURL","url","token","login","email","pass","success","axios","post","password","then","res","register","catch","adminRegister","getUser","userId","get","params","filter","include","getUsers","updateUser","user","patch","getPosts","getSitePosts","skip","limit","fields","title","slug","content","getPostCount","addPost","getSinglePost","updatePost","uploadImage","data","postId","getPostBySlug","where","Comments","postComment","comment","getCommentById","commentId","deleteComment","delete","getComments","dispatch","payload","res2","Login","onSubmit","e","preventDefault","values","map","f","i","value","handleChange","touched","connect","state","auth","AuthActions","withFormik","mapPropsToValues","validationSchema","Yup","shape","handleSubmit","setSubmitting","console","log","Header","style","backgroundImage","image","backgroundPosition","backgroundSize","display","alignItems","subtitle","showButton","to","link","buttonText","BlogItem","onClick","setPostData","PostImage","length","width","src","thumbnail","alt","substring","SiteActions","Blog","classes","history","push","site","posts","postCount","withRouter","count","CommentBuilder","profileId","profile","createdAt","Date","toLocaleDateString","getHours","getMinutes","status","Single","match","modified","Divider","dangerouslySetInnerHTML","__html","Paper","UserIcon","Profile","Signup","field","index","error","password2","min","test","parent","Dashboard","admin","users","comments","role","created_at","toString","AdminActions","TableView","rows","columns","Table","TableHead","TableRow","col","TableCell","label","TableBody","row","colIndex","path","Link","component","RouterLink","cols","Users","Fab","color","aria-label","fab","withStyles","theme","position","bottom","right","Posts","AddPost","FormData","append","target","files","getTime","modules","toolbar","formats","view","p","setValues","container","leftSide","margin","setFieldValue","toLowerCase","replace","fullWidth","val","rightSide","options","save","Button","variant","postImage","$","trigger","spacing","flexDirection","formControl","flex","height","padding","marginBottom","AddUser","getSingleUser","halfWidth","ListItemLink","ListItem","button","Sidebar","List","ListItemIcon","ListItemText","primary","AdminWrapper","open","handleDrawerOpen","setState","handleDrawerClose","root","AppBar","classNames","appBar","appBarShift","Toolbar","IconButton","Typography","noWrap","Drawer","paper","drawerPaper","drawerPaperClose","toolbarIcon","appBarSpace","children","paddingRight","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","whiteSpace","overflowX","justifyContent","mixins","flexGrow","units","overflow","LoginWrapper","App","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","action","concat","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","configureStore","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.7d98bd43.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nlet host;\r\nif (process.env.NODE_ENV === 'development') {\r\n    host = 'http://localhost:8080';\r\n} else {\r\n    host = '';\r\n}\r\nconst API = {\r\n    makeFileURL: (url, token) => {\r\n        return host + url + '?access_token=' + token;\r\n    },\r\n    login: (email, pass, success) => {\r\n        axios.post(`${host}/api/users/login`, { email: email, password: pass })\r\n            .then(res => {\r\n                success(res);\r\n            });\r\n    },\r\n    register: (name, email, pass, success) => {\r\n        axios.post(`${host}/api/users`, { name: name, email: email, password: pass })\r\n            .then(res => {\r\n                success(res);\r\n            })\r\n            .catch(res => {\r\n                success(res);\r\n            })\r\n    },\r\n    adminRegister: (name, email, pass, token, success) => {\r\n        axios.post(`${host}/api/users?access_token=${token}`, { name: name, email: email, password: pass })\r\n            .then(res => {\r\n                success(res);\r\n            })\r\n            .catch(res => {\r\n                success(res);\r\n            })\r\n    },\r\n    getUser: (userId, token, success) => {\r\n        axios.get(`${host}/api/users/${userId}?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    include: 'Profile'\r\n                }\r\n            }\r\n        }).then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getUsers: (token, success) => {\r\n        axios.get(`${host}/api/users?access_token=${token}`)\r\n            .then(res => {\r\n                success(res);\r\n            });\r\n    },\r\n    updateUser: (user, token, success) => {\r\n        axios.patch(`${host}/api/Users/${user.id}?access_token=${token}`, user)\r\n            .then(res => {\r\n                success(res);\r\n            })\r\n    },\r\n    getPosts: (token, success) => {\r\n        axios.get(`${host}/api/Posts?access_token=${token}`)\r\n            .then(res => {\r\n                success(res);\r\n            });\r\n    },\r\n    getSitePosts: (skip, success) => {\r\n        axios.get(`${host}/api/Posts`, {\r\n            params: {\r\n                filter: {\r\n                    skip: skip,\r\n                    limit: 6,\r\n                    include: 'PostImage',\r\n                    fields: {\r\n                        id: true,\r\n                        title: true,\r\n                        slug: true,\r\n                        content: false\r\n                    }\r\n                }\r\n            }\r\n        })\r\n            .then(res => {\r\n                success(res);\r\n            });\r\n    },\r\n    getPostCount: (success) => {\r\n        axios.get(`${host}/api/Posts/count`)\r\n            .then(res => {\r\n                success(res);\r\n            })\r\n    },\r\n    addPost: (post, token, success) => {\r\n        axios.post(`${host}/api/Posts?access_token=${token}`, post)\r\n            .then(res => {\r\n                success(res);\r\n            });\r\n    },\r\n    getSinglePost: (id, token, success) => {\r\n        axios.get(`${host}/api/Posts/${id}?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    include: 'PostImage'\r\n                }\r\n            }\r\n        })\r\n            .then(res => {\r\n                success(res);\r\n            })\r\n    },\r\n    updatePost: (post, token, success) => {\r\n        axios.patch(`${host}/api/Posts/${post.id}?access_token=${token}`, post)\r\n            .then(res => {\r\n                success(res);\r\n            })\r\n    },\r\n    uploadImage: (data, token, postId, userId, success) => {\r\n        axios.post(`${host}/api/PostImages/upload?post_id=${postId}&access_token=${token}&user_id=${userId}`, data)\r\n            .then(res => {\r\n                success(res);\r\n            })\r\n    },\r\n    getPostBySlug: (slug, token, success) => {\r\n        axios.get(`${host}/api/Posts/findOne?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    where: { slug: slug },\r\n                    include: { Comments: 'Profile' }\r\n                }\r\n            }\r\n        }).then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    postComment: (comment, token, success) => {\r\n        axios.post(`${host}/api/Comments?access_token=${token}`, comment, {\r\n            params: {\r\n                filter: {\r\n                    include: 'Profile'\r\n                }\r\n            }\r\n        })\r\n            .then(res => {\r\n                success(res);\r\n            })\r\n    },\r\n    getCommentById: (commentId, token, success) => {\r\n        axios.get(`${host}/api/Comments/${commentId}?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    include: 'Profile'\r\n                }\r\n            }\r\n        }).then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    deleteComment: (commentId, token, success) => {\r\n        axios.delete(`${host}/api/Comments/${commentId}?access_token=${token}`)\r\n            .then(res => {\r\n                success(res);\r\n            })\r\n    },\r\n    getComments: (token, success) => {\r\n        axios.get(`${host}/api/Comments?access_token=${token}`)\r\n            .then(res => {\r\n                success(res);\r\n            });\r\n    },\r\n}\r\nexport default API;","import React, { Component } from 'react';\r\n\r\nclass Field extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"form-group\">\r\n                {this.props.elementName === 'input' ?\r\n                    <input\r\n                        className=\"form-control\"\r\n                        id={this.props.name}\r\n                        type={this.props.type}\r\n                        placeholder={this.props.placeHolder}\r\n                        required=\"required\"\r\n                        data-validation-required-message=\"Please enter your name.\"\r\n                        name={this.props.name}\r\n                        onChange={this.props.onChange}\r\n                        onBlur={this.props.handleBlur}\r\n                    />\r\n                    :\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        id={this.props.name}\r\n                        placeholder={this.props.placeHolder}\r\n                        required=\"required\"\r\n                        data-validation-required-message=\"Please enter a message.\"\r\n                        name={this.props.name}\r\n                        onChange={this.props.onChange}\r\n                        onBlur={this.props.handleBlur}\r\n                    />}\r\n                <p className=\"help-block text-danger\">\r\n                    {(/*this.props.touched*/ this.props.errors) &&\r\n                        <span>{this.props.errors}</span>\r\n                    }\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Field;","import API from '../../utils/api';\r\nexport const login = (email, pass) => {\r\n    return (dispatch) => {\r\n        API.login(email, pass, res => {\r\n            dispatch({\r\n                type: 'LOGIN',\r\n                payload: {\r\n                    email: email,\r\n                    token: res.data.id,\r\n                    userId: res.data.userId\r\n                }\r\n            })\r\n            API.getUser(res.data.userId, res.data.id, res2 => {\r\n                dispatch({\r\n                    type: 'AFTER_LOGIN',\r\n                    payload: res2.data\r\n                })\r\n            })\r\n        })\r\n    }\r\n    // return {\r\n    //     type: 'LOGIN',\r\n    //     payload: {email, pass}\r\n    // }\r\n}\r\n\r\nexport const register = (name, email, pass) => {\r\n    return dispatch => {\r\n        API.register(name, email, pass, res => {\r\n            if (res.status === 200) {\r\n                dispatch((login(email, pass)));\r\n            } else {\r\n                if (res) {\r\n                    dispatch({\r\n                        type: 'SHOW_ERROR',\r\n                        payload: 'There is an error. Do you already have an account?'\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n    //     type: 'REGISTER',\r\n    //     payload: { email, pass }\r\n    // }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport Field from '../common/field';\r\nimport { connect } from 'react-redux';\r\nimport { withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as AuthActions from '../../store/actions/authActions';\r\n\r\n\r\nconst fields = [\r\n    { name: 'email', elementName: 'input', type: 'email', placeHolder: 'Your email' },\r\n    { name: 'password', elementName: 'input', type: 'password', placeHolder: 'Your password' }\r\n]\r\n\r\nclass Login extends Component {\r\n    render() {\r\n        return (\r\n            <div className='login-page'>\r\n                <div className='container'>\r\n                    <div className='login-form'>\r\n                        <div className='row'>\r\n                            <h1>Login</h1>\r\n                        </div>\r\n                        <div >\r\n                            <form className='row' onSubmit={e => {\r\n                                e.preventDefault();\r\n                                this.props.login(this.props.values.email, this.props.values.password);\r\n                            }}>\r\n                                {fields.map((f, i) => {\r\n                                    return (\r\n                                        <div className='col-md-12' key={i}>\r\n                                            <Field\r\n                                                {...f}\r\n                                                value={this.props.values[f.name]}\r\n                                                name={f.name}\r\n                                                onChange={this.props.handleChange}\r\n                                                onBlur={this.props.handleBlur}\r\n                                                touched={(this.props.touched[f.name])}\r\n                                                errors={this.props.errors[f.name]}\r\n                                            />\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                                <div className='col-md-12'>\r\n                                    <button className='btn btn-primary'>Login</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login: (email, pass) => {\r\n            dispatch(AuthActions.login(email, pass));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withFormik({\r\n    mapPropsToValues: () => ({\r\n        email: '',\r\n        password: ''\r\n    }),\r\n    validationSchema: Yup.object().shape({\r\n        email: Yup.string().email('Email is invalid').required('You need to login with your email address'),\r\n        password: Yup.string().required('You need to enter your password')\r\n    }),\r\n    handleSubmit: (values, { setSubmitting }, login) => {\r\n        console.log('Loggin attempt', values);\r\n    }\r\n})(Login));","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../assets/css/blog.css';\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className='masthead' style={{ backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url(${this.props.image})`, backgroundPosition: 'center', backgroundSize: 'cover', display: 'fex', alignItems: 'center' }}>\r\n                <div className='container'>\r\n                    <div className='intro-text'>\r\n                        <div className='intro-lead-in'>{this.props.title}</div>\r\n                        <div className={`intro-heading text-uppercase outline`} >{this.props.subtitle}</div>\r\n                        {this.props.showButton && <Link className='btn btn-primary btn-xl text-uppercase js-scroll-trigger' to={this.props.link}>{this.props.buttonText}</Link>}\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/about.8ee16d94.jpg\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport API from '../../utils/api';\r\nimport { connect } from 'react-redux';\r\nimport * as SiteActions from '../../store/actions/siteActions';\r\nimport BookIcon from '@material-ui/icons/RemoveRedEye';\r\n\r\nimport '../assets/css/blog.css';\r\nclass BlogItem extends Component {\r\n    render() {\r\n        return (\r\n            <div className='col-md-4 col-sm-6 portfolio-item'>\r\n                <Link className='portfolio-link' to={`/blog/${this.props.post.slug}`}\r\n                    onClick={e => this.props.setPostData(this.props.post)}\r\n                >\r\n                    <div className='portfolio-hover'>\r\n                        <div className='portfolio-hover-content blog-item'>\r\n                            <BookIcon className='blog-item-icon' />\r\n                        </div>\r\n                    </div>\r\n                    {this.props.post.PostImage ?\r\n                        this.props.post.PostImage.length > 0 ?\r\n                            <img style={{ width: '100%' }} className='img-fluid' src={API.makeFileURL(this.props.post.PostImage[0].thumbnail, null)} alt='' />\r\n                            : null\r\n                        : null}\r\n                </Link>\r\n                <div className='portfolio-caption'>\r\n                    <h4>{this.props.post.title}</h4>\r\n                    <p className='text-muted'>{this.props.post.slug ? this.props.post.slug.length > 20 ? this.props.post.slug.substring(0, 18) + '...' : this.props.post.slug : null}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setPostData: (post) => {\r\n        dispatch(SiteActions.setPostData(post));\r\n    }\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(BlogItem);","import API from '../../utils/api';\r\n\r\nexport const getPosts = (skip) => {\r\n    return dispatch => {\r\n        API.getSitePosts(skip, res => {\r\n            dispatch({\r\n                type: 'GOT_SITE_POSTS',\r\n                payload: res.data,\r\n                skip: skip\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const getPostCount = () => {\r\n    return dispatch => {\r\n        API.getPostCount(res => {\r\n            dispatch({\r\n                type: 'GOT_POST_COUNT',\r\n                payload: res.data.count\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const setPostData = (post) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'SET_DEFAULT_POST_DATA',\r\n            payload: post\r\n        });\r\n    }\r\n}\r\n\r\nexport const getPostBySlug = (slug, token) => {\r\n    return dispatch => {\r\n        API.getPostBySlug(slug, token, res => {\r\n            dispatch({\r\n                type: 'SET_FULL_POST_DATA',\r\n                payload: res.data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const postComment = (comment, token) => {\r\n    return dispatch => {\r\n        API.postComment(comment, token, res => {\r\n            if (res.status === 200) {\r\n                API.getCommentById(res.data.id, token, res2 => {\r\n                    dispatch({\r\n                        type: 'ADDED_COMMENT',\r\n                        payload: res2.data\r\n                    })\r\n                })\r\n\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteComment = (commentId, slug, token) => {\r\n    return dispatch => {\r\n        API.deleteComment(commentId, token, res => {\r\n\r\n\r\n            dispatch({\r\n                type: 'DELETED_COMMENT',\r\n                payload: commentId\r\n            })\r\n\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, Link as RouterLink, Redirect } from 'react-router-dom';\r\nimport Header from '../common/header';\r\nimport image from '../assets/img/about.jpg';\r\nimport * as SiteActions from '../../store/actions/siteActions';\r\nimport BlogItem from '../common/BlogItem';\r\n\r\nimport '../../components/assets/css/blog.css';\r\nclass Blog extends Component {\r\n    componentDidMount() {\r\n        this.props.getPosts(0);\r\n        this.props.getPostCount();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header\r\n                    title='Blog'\r\n                    subtitle='Read all of our stories'\r\n                    link='/services'\r\n                    showButton={false}\r\n                    image={image}\r\n                    classes={'outline'}\r\n                />\r\n                <button className='blog-login-button' onClick={e => { this.props.history.push('/login') }}>Sign in</button>\r\n                <button className='blog-register-button' onClick={e => { this.props.history.push('/signup') }}>Sign up</button>\r\n                <section className='bg-light' id='portfolio'>\r\n                    <div className='container'>\r\n                        <div className='row'>\r\n                            {this.props.site.posts ?\r\n                                this.props.site.posts.length > 0 ?\r\n                                    this.props.site.posts.map((post, i) => {\r\n                                        return (\r\n                                            <BlogItem\r\n                                                post={post}\r\n                                                key={i}\r\n                                            />\r\n                                        );\r\n                                    }) : null\r\n                                : null}\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-md-12'>\r\n                                <div className='text-center'>\r\n                                    {this.props.site.postCount > this.props.site.posts.length ?\r\n                                        <button className='btn btn-default' onClick={e => {\r\n                                            this.props.getPosts(this.props.site.posts.length);\r\n                                        }}>Load More</button>\r\n                                        : null}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    site: state.site\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getPosts: (skip) => {\r\n        dispatch(SiteActions.getPosts(skip));\r\n    },\r\n    getPostCount: () => {\r\n        dispatch(SiteActions.getPostCount());\r\n    }\r\n});\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Blog));","import React, { Component } from 'react';\r\nimport * as SiteActions from '../../store/actions/siteActions';\r\nimport { connect } from 'react-redux';\r\nimport { withFormik, yupToFormErrors } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Field from './field';\r\n\r\nconst fields = [\r\n    { name: 'content', elementName: 'input', type: 'text', placeHolder: 'Your Comment' }\r\n]\r\nclass CommentBuilder extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    const comment = {\r\n                        postId: this.props.site.post.id,\r\n                        profileId: this.props.auth.profile.id,\r\n                        userId: this.props.auth.user.id,\r\n                        content: this.props.values.content,\r\n                        createdAt: `${(new Date().toLocaleDateString())} ${new Date().getHours()}:${new Date().getMinutes()}`\r\n                    }\r\n                    this.props.postComment(comment, this.props.auth.token);\r\n                }}>\r\n                    <Field\r\n                        {...fields[0]}\r\n                        value={this.props.values[fields[0].name]}\r\n                        name={fields[0].name}\r\n                        onChange={this.props.handleChange}\r\n                        onBlur={this.props.handleBlur}\r\n                        touched={(this.props.touched[fields[0].name])}\r\n                        errors={this.props.errors[fields[0].name]}\r\n                    />\r\n                    <button type='submit' className='btn btn-primary'>Submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    site: state.site\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    postComment: (comment, token) => {\r\n        dispatch(SiteActions.postComment(comment, token))\r\n    }\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withFormik({\r\n    mapPropsToValues: () => ({\r\n        content: ''\r\n    }),\r\n    validationSchema: Yup.object().shape({\r\n        content: Yup.string().required('Your comment needs to have text')\r\n    }),\r\n    handleSubmit: (values, { setSubmitting }, login) => {\r\n    }\r\n})(CommentBuilder));","export default __webpack_public_path__ + \"static/media/user.8d49e377.png\";","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from '../common/header';\r\nimport API from '../../utils/api';\r\nimport * as SiteActions from '../../store/actions/siteActions';\r\nimport { Link } from 'react-router-dom';\r\nimport CommentBuilder from '../common/commentbuilder';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport UserIcon from '../assets/img/user.png';\r\n\r\nimport '../../components/assets/css/blog.css';\r\nclass Single extends Component {\r\n    componentDidMount() {\r\n        this.props.getSinglePost(this.props.match.params.slug, this.props.auth.token);\r\n    }\r\n    componentDidUpdate() {\r\n\r\n        //this.props.getSinglePost(this.props.match.params.slug, this.props.auth.token);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='blogPost'>\r\n                <Header\r\n                    title=''\r\n                    subtitle={this.props.site.post.title}\r\n                    link='/services'\r\n                    showButton={false}\r\n                    image={\r\n                        this.props.site.post.PostImage ?\r\n                            this.props.site.post.PostImage.length > 0 ?\r\n\r\n                                API.makeFileURL(this.props.site.post.PostImage[0].url, this.props.auth.token) : '' : ''}\r\n                />\r\n                <div className='container content'>\r\n\r\n                    <div className='row content'>\r\n\r\n                        <div className='col-md-9'>\r\n                            <div className='date-text-row'>\r\n                                <div className='date-text'>Created: {this.props.site.post.createdAt} </div>\r\n                                <div className='date-text'>{this.props.site.post.modified ? 'Modified: ' + this.props.site.post.modified : ''}</div>\r\n                            </div>\r\n                            <li className='divider'><Divider /></li>\r\n                            <div className='post-content' dangerouslySetInnerHTML={{ __html: this.props.site.post.content }}></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Paper className='row comment-section'>\r\n                        <div className='col-md-12 comment-builder'>\r\n                            <h3>Comments</h3>\r\n                            {this.props.auth.token ?\r\n                                <CommentBuilder />\r\n                                : <p>Want to comment? <Link to='/signup'>Sign Up!</Link></p>}\r\n                        </div>\r\n\r\n                        <div className='row comment'>\r\n                            {this.props.site.post.Comments ?\r\n                                this.props.site.post.Comments.length > 0 ?\r\n                                    this.props.site.post.Comments.map((comment, i) => {\r\n                                        return (\r\n                                            <Paper key={i} className='comment-row'>\r\n                                                <div className='start'>\r\n                                                    <img className='user-icon' src={UserIcon} />\r\n                                                    <div className='comment-column'>\r\n                                                        <h5>{comment.Profile ? comment.Profile.name == null ? 'Unknown' : comment.Profile.name : ''}</h5>\r\n                                                        <p>{comment.content}</p>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='end'>\r\n                                                    <div className='comment-date'>{comment.createdAt}</div>\r\n                                                    {this.props.auth.user.id === comment.userId ?\r\n                                                        <DeleteIcon onClick={e => { this.props.deleteComment(comment.id, this.props.site.post.slug, this.props.auth.token) }} className='comment-icon' /> : <div className='empty-icon'></div>\r\n                                                    }\r\n                                                </div>\r\n                                            </Paper>\r\n                                        )\r\n                                    }) : null : 'There is no Comments'}\r\n                        </div>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    site: state.site\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    getSinglePost: (slug, token) => {\r\n        dispatch(SiteActions.getPostBySlug(slug, token));\r\n    },\r\n    deleteComment: (commentId, slug, token) => {\r\n        dispatch(SiteActions.deleteComment(commentId, slug, token));\r\n    }\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Single);","import React, { Component } from 'react';\r\nimport Field from '../common/field';\r\nimport { connect } from 'react-redux';\r\nimport { withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as AuthActions from '../../store/actions/authActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst fields = [\r\n    { name: 'email', elementName: 'input', type: 'email', placeHolder: 'Your email' },\r\n    { name: 'name', elementName: 'input', type: 'text', placeHolder: 'Your name' },\r\n    { name: 'password', elementName: 'input', type: 'password', placeHolder: 'Your password' },\r\n    { name: 'password2', elementName: 'input', type: 'password', placeHolder: 'Your password (again)' }\r\n]\r\n\r\nclass Signup extends Component {\r\n    render() {\r\n        return (\r\n            <div className='login-page'>\r\n                <div className='container'>\r\n                    <div className='login-form'>\r\n                        <div className='row'>\r\n                            <h1>Sign up</h1>\r\n                        </div>\r\n                        <div>\r\n                            <form className='row' onSubmit={e => {\r\n                                e.preventDefault();\r\n                                this.props.register(this.props.values.name, this.props.values.email, this.props.values.password);\r\n                            }}>\r\n                                {fields.map((field, index) => {\r\n                                    return (\r\n                                        <div className='col-md-12' key={index}>\r\n                                            <Field\r\n                                                {...field}\r\n                                                value={this.props.values[field.name]}\r\n                                                name={field.name}\r\n                                                onChange={this.props.handleChange}\r\n                                                onBlur={this.props.handleBlur}\r\n                                                touched={(this.props.touched[field.name])}\r\n                                                errors={this.props.errors[field.name]}\r\n                                            />\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                                <div className='login-page-row'>\r\n                                    <div className='login-page-button'>\r\n                                        <p className='text-danger text-center'>{this.props.auth.error || ''}</p>\r\n                                        <button className='btn btn-primary'>Sign up!</button>\r\n                                    </div>\r\n\r\n                                    <div className='login-page-text'>Already have an account? <Link to='/login' >Log in!</Link></div>\r\n\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        register: (name, email, pass) => {\r\n            dispatch(AuthActions.register(name, email, pass));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withFormik({\r\n    mapPropsToValues: () => ({\r\n        email: '',\r\n        name: '',\r\n        password: '',\r\n        password2: ''\r\n    }),\r\n    validationSchema: Yup.object().shape({\r\n        email: Yup.string().email('Email is invalid').required('You need to login with your email address'),\r\n        name: Yup.string().required('We need your name'),\r\n        password: Yup.string().min(8, 'Passwords need to be at least 8 characters long').required('You need to enter your password'),\r\n        password2: Yup.string().required('You need to enter your password again').test('pass-match', 'Passwords don\\'t match', function (value) {\r\n            const { password } = this.parent;\r\n            return password === value;\r\n        })\r\n    }),\r\n    handleSubmit: (values, { setSubmitting }, login) => {\r\n        console.log('Loggin attempt', values);\r\n    }\r\n})(Signup));","import API from '../../utils/api';\r\n\r\nexport const getUsers = (token) => {\r\n    return (dispatch) => {\r\n        API.getUsers(token, res => {\r\n            dispatch({\r\n                type: 'GOT_USERS',\r\n                payload: res.data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const getPosts = (token) => {\r\n    return dispatch => {\r\n        API.getPosts(token, res => {\r\n            dispatch({\r\n                type: 'GOT_POSTS',\r\n                payload: res.data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const addPost = (post, token) => {\r\n    return dispatch => {\r\n        API.addPost(post, token, res => {\r\n            dispatch({\r\n                type: 'POST_ADDED',\r\n                payload: res.data\r\n            })\r\n        })\r\n    }\r\n}\r\nexport const getSinglePost = (id, token) => {\r\n    return dispatch => {\r\n        API.getSinglePost(id, token, res => {\r\n            dispatch({\r\n                type: 'GOT_SINGLE_POST',\r\n                payload: res.data\r\n            })\r\n        })\r\n    }\r\n}\r\nexport const updatePost = (post, token) => {\r\n    return dispatch => {\r\n        API.updatePost(post, token, res => {\r\n            dispatch({\r\n                type: 'UPDATED_POST',\r\n                payload: res.data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const uploadImage = (data, token, postId, userId) => {\r\n    return dispatch => {\r\n        API.uploadImage(data, token, postId, userId, res => {\r\n            dispatch({\r\n                type: 'UPLOADED_IMAGE',\r\n                payload: res.data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const adminRegister = (user, token) => {\r\n    return dispatch => {\r\n        API.adminRegister(user.name, user.email, user.password, token, res => {\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: 'ADMIN_REGISTER',\r\n                    payload: res.data\r\n                })\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const getSingleUser = (id, token) => {\r\n    return dispatch => {\r\n        API.getUser(id, token, res => {\r\n            dispatch({\r\n                type: 'GOT_SINGLE_USER',\r\n                payload: res.data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user, token) => {\r\n    return dispatch => {\r\n        API.updateUser(user, token, res => {\r\n            dispatch({\r\n                type: 'UPDATED_POST',\r\n                payload: res.data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const getComments = (token) => {\r\n    return dispatch => {\r\n        API.getComments(token, res => {\r\n            dispatch({\r\n                type: 'GOT_COMMENTS',\r\n                payload: res.data\r\n            })\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport * as AdminActions from '../../../store/actions/adminActions';\r\n\r\nimport UserIcon from '../../assets/img/user.png';\r\nimport '../../assets/css/admin.css';\r\nclass Dashboard extends Component {\r\n    componentDidMount() {\r\n        this.props.getPosts(this.props.auth.token);\r\n        this.props.getUsers(this.props.auth.token);\r\n        this.props.getComments(this.props.auth.token);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='p100'>\r\n                <div className='admin-title'>Dashboard</div>\r\n                <Divider />\r\n                <div className='dashboard-main-row'>\r\n                    <div className='admin-row'>\r\n                        <Paper className='admin-tale'>\r\n                            <div className='dashboard-counter'>{this.props.admin.users ? this.props.admin.users.length : null}</div>\r\n                            Users\r\n                        </Paper>\r\n                        <Paper className='admin-tale'>\r\n                            <div className='dashboard-counter'>{this.props.admin.posts ? this.props.admin.posts.length : null}</div>\r\n                            Posts\r\n                        </Paper>\r\n                        <Paper className='admin-tale'>\r\n                            <div className='dashboard-counter'>{this.props.admin.comments ? this.props.admin.comments.length : null}</div>\r\n                            Comments\r\n                        </Paper>\r\n\r\n                    </div>\r\n                    <Paper className='admin-user-menu'>\r\n                        <img className='avatar' src={UserIcon} />\r\n                        <div className='text-1'>{this.props.auth.user.name}</div>\r\n                        <li className='admin-divider'><Divider /></li>\r\n                        <div className='text-3'>{this.props.auth.user.Profile.role === 'admin' ? 'Administrator' : this.props.auth.user.Profile.role === 'editor' ? 'Editor' : this.props.auth.user.Profile.role === 'subscriber' ? 'Subscriber' : ''}</div>\r\n                        <li className='admin-divider'><Divider /></li>\r\n                        <div className='text-2'>\r\n                            Email: {this.props.auth.user.email}\r\n                        </div>\r\n                        <div className='text-2'>\r\n                            Since: {this.props.auth.user.Profile ? this.props.auth.user.Profile.created_at ? this.props.auth.user.Profile.created_at.toString().substring(0, this.props.auth.user.Profile.created_at.toString().length - 14) : null : null}\r\n                        </div>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    admin: state.admin\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    getUsers: (token) => {\r\n        dispatch(AdminActions.getUsers(token));\r\n    },\r\n    getPosts: (token) => {\r\n        dispatch(AdminActions.getPosts(token));\r\n    },\r\n    getComments: (token) => {\r\n        dispatch(AdminActions.getComments(token));\r\n    }\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Dashboard));","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nclass TableView extends Component {\r\n\r\n    render() {\r\n        const { rows, columns } = this.props;\r\n        return (\r\n            <Paper>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {columns ?\r\n                                columns.map((col, i) => {\r\n                                    return (\r\n                                        <TableCell key={i} >{col.label}</TableCell>\r\n                                    )\r\n                                })\r\n                                : null}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows ?\r\n                            rows.map((row, i) => {\r\n                                return (<TableRow key={i}>\r\n                                    {\r\n                                        columns.map((col, colIndex) => {\r\n                                            return (\r\n                                                <TableCell key={colIndex}>\r\n                                                    {col.name === 'id' ?\r\n                                                        this.props.path == '/admin/posts' ? <Link component={RouterLink} to={`/admin/posts/edit/${row[col.name]}`}>{row[col.name]}</Link> : <Link component={RouterLink} to={`/admin/users/edit/${row[col.name]}`}>{row[col.name]}</Link> : row[col.name]}\r\n                                                </TableCell>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </TableRow>\r\n                                )\r\n                            }) : null\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </Paper>\r\n\r\n        )\r\n    }\r\n}\r\nexport default TableView;","import React, { Component } from 'react';\r\nimport TableView from '../../common/TableView';\r\nimport { connect } from 'react-redux';\r\nimport * as AdminActions from '../../../store/actions/adminActions';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst cols = [\r\n    { label: 'ID', name: 'id' },\r\n    { label: 'Email', name: 'email' },\r\n    { label: 'Name', name: 'name' }\r\n]\r\nconst styles = theme => ({\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: '50px',\r\n        right: '50px'\r\n    }\r\n});\r\nclass Users extends Component {\r\n    componentDidMount() {\r\n        // this.props.getUsers(this.props.auth.token);\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const users = this.props.admin.users;\r\n        return (\r\n            <div>\r\n                <h1>Users</h1>\r\n                <TableView\r\n                    columns={cols}\r\n                    rows={users}\r\n                    path={'/admin/users'}\r\n                />\r\n                <Fab component={RouterLink} to='/admin/users/add' color='secondary' aria-label='Add' className={classes.fab}>\r\n                    <EditIcon />\r\n                </Fab>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    admin: state.admin\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    getUsers: (token) => {\r\n        dispatch(AdminActions.getUsers(token))\r\n    }\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Users));","import React, { Component } from 'react';\r\nimport TableView from '../../common/TableView';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport * as AdminActions from '../../../store/actions/adminActions';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\nconst cols = [\r\n    { label: 'ID', name: 'id' },\r\n    { label: 'Title', name: 'title' }\r\n];\r\nconst styles = theme => ({\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: '50px',\r\n        right: '50px'\r\n    }\r\n});\r\nclass Posts extends Component {\r\n\r\n    componentDidMount() {\r\n        // this.props.getPosts(this.props.auth.token);\r\n    }\r\n    render() {\r\n        const posts = this.props.admin.posts;\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <h1>Posts</h1>\r\n                <TableView\r\n                    columns={cols}\r\n                    rows={posts}\r\n                    path={'/admin/posts'}\r\n                />\r\n                <Fab component={RouterLink} to='/admin/posts/add' color='secondary' aria-label='Add' className={classes.fab}>\r\n                    <EditIcon />\r\n                </Fab>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    admin: state.admin\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    getPosts: (token) => {\r\n        dispatch(AdminActions.getPosts(token));\r\n    }\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Posts));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as AdminActions from '../../../store/actions/adminActions';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { withFormik, Form } from 'formik';\r\nimport { FormikTextField, FormikSelectField } from 'formik-material-fields';\r\nimport Button from '@material-ui/core/Button';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport API from '../../../utils/api';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n/* global $*/\r\nconst styles = theme => ({\r\n    container: {\r\n        margin: theme.spacing(3),\r\n        display: 'flex',\r\n        flexDirection: 'row wrap',\r\n        width: '100%'\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(0)\r\n    },\r\n    leftSide: {\r\n        flex: 2,\r\n        height: '100%',\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(3)\r\n    },\r\n    rightSide: {\r\n        flex: 1,\r\n        height: '100%',\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(3)\r\n    },\r\n    save: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    postImage: {\r\n        width: '100%'\r\n    }\r\n});\r\nclass AddPost extends Component {\r\n    componentDidUpdate(props, state) {\r\n        if (this.props.match.params.view === 'add' && this.props.admin.posts.filter(p => p.title === this.props.values.title).length > 0) {\r\n            const post = this.props.admin.posts.filter(p => p.title === this.props.values.title)[0];\r\n            this.props.history.push('/admin/posts/edit/' + post.dispatch);\r\n        }\r\n        if (this.props.admin.post.id !== props.admin.post.id) {\r\n            //When redux state changes post in admin reducer\r\n            this.props.setValues(this.props.admin.post)\r\n        }\r\n    }\r\n    componentDidMount(props, state) {\r\n        if (this.props.match.params.view === 'edit' && this.props.match.params.id) {\r\n            this.props.getSinglePost(this.props.match.params.id, this.props.auth.token);\r\n            //console.log('Id:' + this.props.match.params.id + ' token: ' + this.props.auth.token)\r\n        }\r\n    }\r\n    uploadImage = (e) => {\r\n        const data = new FormData();\r\n        data.append('file', e.target.files[0], new Date().getTime().toString() + e.target.files[0].name);\r\n        this.props.uploadImage(data, this.props.auth.token, this.props.admin.post.id, this.props.auth.user.userId);\r\n    }\r\n    modules = {\r\n        toolbar: [\r\n            ['bold', 'italic', 'underline', 'strike'],\r\n            [{ 'header': 1 }, { 'header': 2 }],\r\n            [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n            [{ 'indent': '-1' }, { 'indent': '+1' }],\r\n            [{ 'size': ['small', 'medium', 'large', 'huge'] }],\r\n            [{ 'color': [] }, { 'background': [] }],\r\n            ['image'],\r\n            ['clean']\r\n\r\n        ]\r\n    }\r\n    formats = [\r\n        'header',\r\n        'bold', 'italic', 'underline', 'strike', 'blockquote', 'script',\r\n        'list', 'bullet', 'indent',\r\n        'link', 'image', 'color', 'code-block'\r\n    ]\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Form className={classes.container}>\r\n                    <Paper className={classes.leftSide}>\r\n                        <FormikTextField\r\n                            name='title'\r\n                            label='Title'\r\n                            margin='normal'\r\n                            onChange={e => this.props.setFieldValue('slug', e.target.value.toLowerCase().replace(/ /g, '_'))}\r\n                            fullWidth\r\n                        />\r\n                        <FormikTextField\r\n                            name='slug'\r\n                            label='Slug'\r\n                            margin='normal'\r\n                        />\r\n                        <ReactQuill\r\n                            value={this.props.values.content}\r\n                            modules={this.modules}\r\n                            formats={this.formats}\r\n                            placeHolder='Write some cool stuff'\r\n                            onChange={val => this.props.setFieldValue('content', val)}\r\n                        />\r\n                        {/* <FormikTextField\r\n                            name='content'\r\n                            label='Content'\r\n                            margin='normal'\r\n                            fullWidth\r\n                        /> */}\r\n                    </Paper>\r\n                    <Paper className={classes.rightSide}>\r\n                        <FormikSelectField\r\n                            name='status'\r\n                            label='Status'\r\n                            margin='normal'\r\n                            options={[\r\n                                { label: 'Unpublished', value: false },\r\n                                { label: 'Published', value: true }\r\n                            ]}\r\n                            fullWidth\r\n                        />\r\n                        <div className={classes.save}>\r\n                            <Button\r\n                                variant='contained'\r\n                                color='secondary'\r\n                                onClick={e => {\r\n                                    this.props.handleSubmit();\r\n                                }\r\n                                }\r\n                            ><SaveIcon /> Save</Button>\r\n                        </div>\r\n                        {this.props.admin.post.PostImage ?\r\n                            this.props.admin.post.PostImage.length > 0 ?\r\n                                <img src={API.makeFileURL(this.props.admin.post.PostImage[0].url, this.props.auth.token)} className={classes.postImage} />\r\n                                //console.log(API.makeFileURL(this.props.admin.post.PostImage[0].url, this.props.auth.token).toString())\r\n                                : null\r\n                            : null}\r\n\r\n                        <div>\r\n                            <Button\r\n                                variant='contained'\r\n                                color='primary'\r\n                                onClick={e => {\r\n                                    $('.MyFile').trigger('click');\r\n                                }}><ImageIcon />Upload Post Image</Button>\r\n                            <input type='file' style={{ display: 'none' }} className='MyFile' onChange={this.uploadImage} />\r\n                        </div>\r\n                    </Paper>\r\n                </Form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    admin: state.admin\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    addPost: (post, token) => {\r\n        dispatch(AdminActions.addPost(post, token));\r\n    },\r\n    updatePost: (post, token) => {\r\n        dispatch(AdminActions.updatePost(post, token))\r\n    },\r\n    getSinglePost: (id, token) => {\r\n        dispatch(AdminActions.getSinglePost(id, token));\r\n    },\r\n    uploadImage: (data, token, postId, userId) => {\r\n        dispatch(AdminActions.uploadImage(data, token, postId, userId))\r\n    }\r\n\r\n});\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withFormik({\r\n    mapPropsToValues: (props) => ({\r\n        title: props.admin.post.title || '',\r\n        slug: props.admin.post.slug || '',\r\n        createdAt: props.admin.post.createdAt || new Date().toLocaleDateString(),\r\n        status: props.admin.post.status || false,\r\n        content: props.admin.post.content || '',\r\n        modified: props.admin.post.modified || new Date().toLocaleDateString()\r\n    }),\r\n    validationSchema: Yup.object().shape({\r\n        title: Yup.string().required('Title is required'),\r\n        slug: Yup.string().required(),\r\n        content: Yup.string().required()\r\n    }),\r\n    handleSubmit: (values, { setSubmitting, props }) => {\r\n        if (props.match.params.view === 'edit') {\r\n            const post = {\r\n                ...values,\r\n                id: props.match.params.id,\r\n                modified: new Date().toLocaleDateString()\r\n            }\r\n            props.updatePost(post, props.auth.token)\r\n        } else {\r\n            props.addPost(values, props.auth.token);\r\n        }\r\n        <Redirect to='/admin/posts' />\r\n    }\r\n})(withStyles(styles)(AddPost))));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withFormik, Form } from 'formik';\r\nimport { FormikTextField, FormikSelectField } from 'formik-material-fields';\r\nimport * as Yup from 'yup';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport * as AdminActions from '../../../store/actions/adminActions';\r\nconst styles = theme => ({\r\n    container: {\r\n        margin: theme.spacing(3),\r\n        display: 'flex',\r\n        flexDirection: 'row wrap',\r\n        width: '100%'\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(0)\r\n    },\r\n    leftSide: {\r\n        flex: 2,\r\n        height: '100%',\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(3)\r\n    },\r\n    rightSide: {\r\n        flex: 1,\r\n        height: '100%',\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(3)\r\n    },\r\n    save: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    postImage: {\r\n        width: '100%'\r\n    },\r\n    halfWidth: {\r\n        width: '50%'\r\n    }\r\n});\r\nclass AddUser extends Component {\r\n    componentDidUpdate(props, state) {\r\n        if (this.props.match.params.view === 'add' && this.props.admin.users.filter(p => p.name === this.props.values.name).length > 0) {\r\n            const user = this.props.admin.users.filter(p => p.name === this.props.values.name)[0];\r\n            this.props.history.push('/admin/users/edit/' + user.dispatch);\r\n\r\n\r\n        }\r\n        if (this.props.admin.user && this.props.admin.user.id !== props.admin.user.id) {\r\n            //When redux state changes user in admin reducer\r\n            this.props.setValues(this.props.admin.user)\r\n        }\r\n    }\r\n    componentDidMount(props, state) {\r\n        if (this.props.match.params.view === 'edit' && this.props.match.params.id) {\r\n            this.props.getSingleUser(this.props.match.params.id, this.props.auth.token);\r\n            //console.log('Id:' + this.props.match.params.id + ' token: ' + this.props.auth.token)\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Form className={classes.container}>\r\n                <Paper className={classes.leftSide}>\r\n                    <FormikTextField\r\n                        name='name'\r\n                        label='Name'\r\n                        margin='normal'\r\n                        fullWidth\r\n                    />\r\n                    <FormikTextField\r\n                        name='email'\r\n                        label='Email'\r\n                        margin='normal'\r\n                        fullWidth\r\n                    />\r\n                    <FormikTextField\r\n                        name='password'\r\n                        label='Password'\r\n                        margin='normal'\r\n                        type='password'\r\n                        fullWidth\r\n                    />\r\n                    <FormikSelectField\r\n                        name='role'\r\n                        label='Role'\r\n                        margin='normal'\r\n                        options={[\r\n                            { label: 'Admin', value: 0 },\r\n                            { label: 'Subscriber', value: 1 },\r\n                            { label: 'Editor', value: 2 }\r\n                        ]}\r\n                        className={classes.halfWidth}\r\n                    />\r\n                </Paper>\r\n                <Paper className={classes.rightSide}>\r\n                    <div className={classes.save}>\r\n                        <Button\r\n                            variant='contained'\r\n                            color='secondary'\r\n                            onClick={e => {\r\n                                this.props.handleSubmit();\r\n                                <Redirect to='/admin/users' />\r\n                            }\r\n                            }\r\n                        ><SaveIcon /> Save</Button>\r\n                    </div>\r\n                </Paper>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    admin: state.admin,\r\n    auth: state.auth\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    adminRegister: (user, token) => {\r\n        dispatch(AdminActions.adminRegister(user, token));\r\n    },\r\n    updateUser: (user, token) => {\r\n        dispatch(AdminActions.updateUser(user, token));\r\n    },\r\n    getSingleUser: (userId, token) => {\r\n        dispatch(AdminActions.getSingleUser(userId, token));\r\n    }\r\n});\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withFormik({\r\n    mapPropsToValues: (props) => ({\r\n        name: props.admin.user ? props.admin.user.name || '' : '',\r\n        email: props.admin.user ? props.admin.user.email || '' : '',\r\n        password: '',\r\n        role: 1\r\n    }),\r\n    validationSchema: Yup.object().shape({\r\n        name: Yup.string().required('Title is required'),\r\n        email: Yup.string().email().required('Email is required'),\r\n        password: Yup.string().required('Password is required')\r\n    }),\r\n    handleSubmit: (values, { setSubmitting, props }) => {\r\n        console.log(props.auth.token);\r\n        if (props.match.params.view === 'edit') {\r\n            const user = {\r\n                ...values,\r\n                id: props.match.params.id\r\n            }\r\n            props.updateUser(user, props.auth.token)\r\n        } else {\r\n            props.adminRegister(values, props.auth.token);\r\n        }\r\n\r\n    }\r\n})(withStyles(styles)(AddUser))));","import React, {Component} from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport {Link as RouterLink} from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n\r\nfunction ListItemLink(props){\r\n    return <ListItem button component={RouterLink} {...props}/>;\r\n}\r\nclass Sidebar extends Component {\r\n    render(){\r\n        return (\r\n            <List>\r\n                <ListItemLink to=\"/admin\">\r\n                        <ListItemIcon>\r\n                            <DashboardIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary='Dashboard'/>\r\n                </ListItemLink>\r\n                <ListItemLink to=\"/admin/posts\">\r\n                        <ListItemIcon>\r\n                            <FileCopyIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary='Posts'/>\r\n                    </ListItemLink>\r\n                <ListItemLink to=\"/admin/users\">\r\n                        <ListItemIcon>\r\n                            <FaceIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary='Users'/>\r\n                </ListItemLink>\r\n            </List>\r\n        );\r\n    }\r\n}\r\nexport default Sidebar;","import React, { Component } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport './assets/css/admin.css';\r\nimport Sidebar from './common/Sidebar';\r\n//Drawer imports\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeftSharp';\r\nimport Divider from '@material-ui/core/Divider';\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex'\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24,\r\n\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        })\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'noWrap',\r\n        overflowX: 'hidden',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen\r\n        })\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7),\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen\r\n        })\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing.units * 3,\r\n        height: '100vh',\r\n        overflow: 'auto'\r\n    },\r\n    appBarSpace: theme.mixins.toolbar\r\n})\r\nclass AdminWrapper extends Component {\r\n    state = {\r\n        open: false\r\n    }\r\n    handleDrawerOpen = (e) => {\r\n        this.setState({ open: true });\r\n    }\r\n    handleDrawerClose = (e) => {\r\n        this.setState({ open: false })\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div id='admin-page' className={classes.root}>\r\n                <AppBar className={classNames(classes.appBar, this.state.open && classes.appBarShift)}>\r\n                    <Toolbar className={classes.toolbar}>\r\n                        <IconButton onClick={this.handleDrawerOpen}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography\r\n                            component='h1'\r\n                            variant='h6'\r\n                            color='inherit'\r\n                            noWrap>\r\n                            Admin\r\n                            </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    classes={{\r\n                        paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose)\r\n                    }}\r\n                    variant='permanent'\r\n                    open={true}\r\n                >\r\n                    <div className={classes.toolbarIcon}>\r\n                        <IconButton onClick={this.handleDrawerClose}>\r\n                            <ChevronLeftIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <Sidebar />\r\n                </Drawer>\r\n                <main className={classes.content}>\r\n                    <div className={classes.appBarSpace} />\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withStyles(styles)(AdminWrapper);","import React, {Component} from 'react';\r\nimport './assets/css/admin.css';\r\nclass LoginWrapper extends Component{\r\n    render(){\r\n        return (\r\n            <div id='admin-page'>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default LoginWrapper;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './App.css';\n//Pages\nimport Login from './components/Pages/Login';\nimport Blog from './components/Pages/Blog';\nimport Single from './components/Pages/Single';\nimport Signup from './components/Pages/Signup';\n//Admin Pages\nimport Dashboard from './components/Pages/Admin/Dashboard';\nimport Users from './components/Pages/Admin/Users';\nimport Posts from './components/Pages/Admin/Posts';\nimport AddPost from './components/Pages/Admin/AddPost';\nimport AddUser from './components/Pages/Admin/AddUser';\n\nimport AdminWrapper from './components/AdminWrapper';\nimport LoginWrapper from './components/LoginWrapper';\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Route\n          exact={true}\n          path='/admin/users/:view/:id'\n          render={props => {\n            return (\n              <div>\n                {this.props.auth.token ?\n                  this.props.auth.user.Profile ?\n                    this.props.auth.user.Profile.role === 'admin' ?\n                      <AdminWrapper>\n                        <AddUser />\n                      </AdminWrapper>\n                      : <Redirect to='/' />\n                    : null\n                  : <LoginWrapper>\n                    <Login />\n                  </LoginWrapper>\n                }\n              </div>\n            )\n          }}\n        />\n        <Route\n          exact={true}\n          path='/admin/users/:view'\n          render={props => {\n            return (\n              <div>\n                {this.props.auth.token ?\n                  this.props.auth.user.Profile ?\n                    this.props.auth.user.Profile.role === 'admin' ?\n                      <AdminWrapper>\n                        <AddUser />\n                      </AdminWrapper>\n                      : <Redirect to='/' />\n                    : null\n                  : <LoginWrapper>\n                    <Login />\n                  </LoginWrapper>\n                }\n              </div>\n            )\n          }}\n        />\n        <Route\n          exact={true}\n          path='/admin/users'\n          render={props => {\n            return (\n              <div>\n                {this.props.auth.token ?\n                  this.props.auth.user.Profile ?\n                    this.props.auth.user.Profile.role === 'admin' ?\n                      <AdminWrapper>\n                        <Users />\n                      </AdminWrapper>\n                      : <Redirect to='/' />\n                    : null\n                  : <LoginWrapper>\n                    <Login />\n                  </LoginWrapper>\n                }\n              </div>\n            )\n          }}\n        />\n        <Route\n          exact={true}\n          path='/admin/posts/:view/:id'\n          render={props => {\n            return (\n              <div>\n                {this.props.auth.token ?\n                  this.props.auth.user.Profile ?\n                    this.props.auth.user.Profile.role === 'admin' ?\n                      <AdminWrapper>\n                        <AddPost />\n                      </AdminWrapper>\n                      : <Redirect to='/' />\n                    : null\n                  : <LoginWrapper>\n                    <Login />\n                  </LoginWrapper>\n                }\n              </div>\n            )\n          }}\n\n        />\n        <Route\n          exact={true}\n          path='/admin/posts/:view'\n          render={props => {\n            return (\n              <div>\n                {this.props.auth.token ?\n                  this.props.auth.user.Profile ?\n                    this.props.auth.user.Profile.role === 'admin' ?\n                      <AdminWrapper>\n                        <AddPost />\n                      </AdminWrapper>\n                      : <Redirect to='/' />\n                    : null\n                  : <LoginWrapper>\n                    <Login />\n                  </LoginWrapper>\n                }\n              </div>\n            )\n          }}\n\n        />\n        <Route\n          exact={true}\n          path='/admin/posts'\n          render={props => {\n            return (\n              <div>\n                {this.props.auth.token ?\n                  this.props.auth.user.Profile ?\n                    this.props.auth.user.Profile.role === 'admin' ?\n                      <AdminWrapper>\n                        <Posts />\n                      </AdminWrapper>\n                      : <Redirect to='/' />\n                    : null\n                  : <LoginWrapper>\n                    <Login />\n                  </LoginWrapper>\n                }\n              </div>\n            )\n          }}\n        />\n        <Route\n          exact={true}\n          path='/signup'\n          render={props => {\n            if (this.props.auth.token) {\n              return (\n                <Redirect to='/' />\n              )\n            } else {\n              return (\n                <LoginWrapper>\n                  <Signup />\n                </LoginWrapper>\n              )\n            }\n          }} />\n        <Route\n          exact={true}\n          path='/admin'\n          render={props => {\n            return (\n              <div>\n                {this.props.auth.token ?\n                  this.props.auth.user.Profile ?\n                    this.props.auth.user.Profile.role === 'admin' ?\n                      <AdminWrapper>\n                        <Dashboard />\n                      </AdminWrapper>\n                      : <Redirect to='/' />\n                    : null\n                  : <LoginWrapper>\n                    <Login />\n                  </LoginWrapper>\n                }\n              </div>\n            )\n          }}\n        />\n        <Route\n          exact={true}\n          path='/login'\n          render={props => {\n            return (\n              <div>\n                {this.props.auth.token ?\n                  <Redirect to='/' />\n                  :\n                  <LoginWrapper>\n                    <Login />\n                  </LoginWrapper>\n\n                }\n              </div>\n            )\n          }}\n        />\n        <Route\n          exact={true}\n          path='/'\n          render={props => (\n            <Redirect to='/blog' />\n          )}\n        />\n        <Route\n          exact={true}\n          path='/blog/:slug'\n          render={props => (\n            <Single {...props} />\n          )}\n        />\n        <Route\n          exact={true}\n          path='/blog'\n          render={props => (\n            <Blog {...props} />\n          )}\n        />\n      </Router>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n\n  }\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const defaultState = {\r\n    user: {},\r\n    token: null,\r\n    error: null,\r\n    profile: null\r\n}\r\n\r\nconst auth = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                token: action.payload.token\r\n            }\r\n        case 'SHOW_ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case 'AFTER_LOGIN':\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                profile: action.payload.Profile\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default auth;","const defaultState = {\r\n    users: [],\r\n    posts: [],\r\n    post: {},\r\n    user: {},\r\n    comments: []\r\n}\r\n\r\nconst admin = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case 'GOT_USERS':\r\n            return {\r\n                ...state,\r\n                users: action.payload\r\n            }\r\n        case 'GOT_POSTS':\r\n            return {\r\n                ...state,\r\n                posts: action.payload\r\n            }\r\n        case 'POST_ADDED':\r\n            return {\r\n                ...state,\r\n                posts: state.posts.concat(action.payload),\r\n                post: action.payload\r\n            }\r\n        case 'GOT_SINGLE_POST':\r\n            return {\r\n                ...state,\r\n                post: action.payload\r\n            }\r\n        case 'UPDATED_POST':\r\n            return {\r\n                ...state,\r\n                post: {\r\n                    ...state.post,\r\n                    ...action.payload\r\n                },\r\n                posts: state.posts.map(p => {\r\n                    if (p.id === action.payload.id) {\r\n                        //This is the existing post in redux that has been updated\r\n                        //and currently in action.payload\r\n                        return {\r\n                            ...p,\r\n                            ...action.payload\r\n                        }\r\n                    } else {\r\n                        return p\r\n                    }\r\n                })\r\n            }\r\n        case 'UPLOADED_IMAGE':\r\n            return {\r\n                ...state,\r\n                post: {\r\n                    ...state.post,\r\n                    PostImage: [action.payload]\r\n                }\r\n            }\r\n        case 'ADMIN_REGISTER':\r\n            return {\r\n                ...state,\r\n                users: state.users.concat(action.payload),\r\n                user: action.payload\r\n            }\r\n        case 'GOT_SINGLE_USER':\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        case 'GOT_COMMENTS':\r\n            return {\r\n                ...state,\r\n                comments: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default admin;","const defaultState = {\r\n    posts: [],\r\n    postCount: 0,\r\n    post: {}\r\n}\r\n\r\nconst site = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case 'GOT_SITE_POSTS':\r\n            return {\r\n                ...state,\r\n                posts: action.skip ? state.posts.concat(action.payload) : action.payload\r\n            }\r\n        case 'GOT_POST_COUNT':\r\n            return {\r\n                ...state,\r\n                postCount: action.payload\r\n            }\r\n        case 'SET_DEFAULT_POST_DATA':\r\n            return {\r\n                ...state,\r\n                post: action.payload\r\n            }\r\n        case 'SET_FULL_POST_DATA':\r\n            return {\r\n                ...state,\r\n                post: {\r\n                    ...state.post,\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case 'ADDED_COMMENT':\r\n            return {\r\n                ...state,\r\n                post: {\r\n                    ...state.post,\r\n                    Comments: state.post.Comments.concat(action.payload)\r\n                }\r\n            }\r\n        case 'DELETED_COMMENT':\r\n            return {\r\n                ...state,\r\n                post: {\r\n                    ...state.post,\r\n                    Comments: state.post.Comments.filter(p => p.id != action.payload)\r\n                }\r\n            }\r\n            break;\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default site;","import { combineReducers } from 'redux';\r\nimport auth from './authReducer';\r\nimport admin from './adminReducer';\r\nimport site from './siteReducer';\r\nexport default combineReducers({\r\n    auth,\r\n    admin,\r\n    site\r\n})","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {persistStore, persistReducer} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport default ()=>{\r\n    let store = createStore(persistedReducer, applyMiddleware(thunk));\r\n    let persistor = persistStore(store);\r\n    return {\r\n        store,\r\n        persistor\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport configureStore from './store/configureStore';\nimport {PersistGate} from 'redux-persist/integration/react';\n\nconst {store, persistor} = configureStore();\nReactDOM.render(\n  <Provider store = {store}>\n  <React.StrictMode>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </React.StrictMode>\n  </Provider>\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}